TODOS

REQUIREMENTS
    - GET
        - DISPLAY ALL RATED BOOKS (HISTORY) (DONE)
            - DISPLAY RELEAVANT BOOK OBJECT
        - DISPLAY ALL REOMMENDATED BOOKS (DONE)
            - DISPLAY RELEAVANT BOOK OBJECT
        - EXPLORE BOOKS IN GENERAL (DONE)
    - POST
           - A BUTTON TO RATE A BOOK
         - A BUTTON TO ADD NEW USER
        - A BUTTON TO ADD NEW BOOKS


-BUILD FUNCTION FOR UPDATE AND DELETE
-WORK ON GUI INTERACTION


#######################################
MAIN GOALS
- GET
    - all recommendated books(DONE)
    - all user-rated books(DONE)
- POST
    - In book data frame
        - New books (DONE)
    - In rating data frame (DONE)
          - new user rating (DONE)
    - New user(DONE)

- UPDATE
    - In book data frame
        - Nil
    - In rating data frame
          - specific user book rating (change)
- DELETE
    - In book data frame
        - book
    - In rating data frame
        - specific user book rating (delete)


DEBUG
QUERY NOT RUNNING
- tried return base.html will all the html code in (NOWROK)
-Try  writing the script tag by yourself so that it has not copied
some random invisilbe chars(NOTWROKING)
- Try to make another endpoint and do a simple JQUERY AJAX send'

USER DATA IS NOT BEING RENDERED ON THE SCREEN
- CAUSE THE DATA IS NOT BEGIN PASSED? CHECK IF GET_USER_RATED_BOOK GIVES STUFF BACK
    - YES IT SEND STUFF BACK
-  IS RECOMMENDATION.HTML APPENDED IN THE BASE.HTML?
    - YES, DATA FROM THE SERVER IS ALSO BEING CORRECTLY ADDED TO THE RECOMMENDED
    BUT IT IS NOT SHOWING IN THE SCREEN
    - YOU MAY HAVE HIDEEN/FORGORT TO UNHIDE IN JQERY?
- May be you wrote wrong ID in jquery?
    - yes (sloved)

USER RATED BOOKS ARE NOT SHOWING UP ON THE SCREEN
     - CHECK IF THE HTML HAS BEEN APPENED
     - CHECK IF IT IS HIDDEN
            - used empty function instead of remove


FUNCTIONAL LADDER
POST USER RATING
- whenever class of rate_this_book is clicked bring a model
- track down the ISBN
    - Go up one div
    - Get the first <p> vlaue
        - vlaue will look like ISBN:123456X
        - filter such that it only contain 123456X
- When submit button is clicked
- Send the value to the server
      - currentID
      - ISBN
      - bookRating
In the server
- in rating_df (make sure this is the global rating_df)
    - add a row:
        - {userID: current_userID, ISBN: isbn, bookRating:bookRating}
    - YOU WILL NEED TO UPDATE THE HISTORY PAGE AND RECOMMENDATION PAGE
        - HISTORY PAGE
            - IT SHOULD AUTOMATICALLY TAKE CARE OF ITSELF IF YOU HAVE UPDATED THE GLOBAL TABLE
                - YOU CAN RATE A BOOK IN A HISTORY PAGE, HENCE, HISTORY LINK WILL BE CLICKED
                - Once, history linked is clicked it always askes server for the new stuff
        - Recommendation Page
            - REDO SVD
                - MAKE A FUNCTION THAT REDOES SVD IN SERVER
            - RETURN RECOMMENDATION
                -




